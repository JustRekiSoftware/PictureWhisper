// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PictureWhisper.Domain.Concrete;

namespace PictureWhisper.Domain.Migrations
{
    [DbContext(typeof(DB_PictureWhisperContext))]
    partial class DB_PictureWhisperContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Comment", b =>
                {
                    b.Property<int>("C_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("C_Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("C_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("C_PublisherID")
                        .HasColumnType("int");

                    b.Property<int>("C_ReceiverID")
                        .HasColumnType("int");

                    b.Property<int>("C_ReplyNum")
                        .HasColumnType("int");

                    b.Property<short>("C_Status")
                        .HasColumnType("smallint");

                    b.Property<int>("C_WallpaperID")
                        .HasColumnType("int");

                    b.HasKey("C_ID");

                    b.ToTable("T_Comment");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Favorite", b =>
                {
                    b.Property<int>("FVRT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FVRT_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("FVRT_FavoritorID")
                        .HasColumnType("int");

                    b.Property<int>("FVRT_WallpaperID")
                        .HasColumnType("int");

                    b.HasKey("FVRT_ID");

                    b.ToTable("T_Favorite");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Follow", b =>
                {
                    b.Property<int>("FLW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FLW_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("FLW_FollowedID")
                        .HasColumnType("int");

                    b.Property<int>("FLW_FollowerID")
                        .HasColumnType("int");

                    b.HasKey("FLW_ID");

                    b.ToTable("T_Follow");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Like", b =>
                {
                    b.Property<int>("L_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("L_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("L_LikerID")
                        .HasColumnType("int");

                    b.Property<int>("L_WallpaperID")
                        .HasColumnType("int");

                    b.HasKey("L_ID");

                    b.ToTable("T_Like");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Reply", b =>
                {
                    b.Property<int>("RPL_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RPL_CommentID")
                        .HasColumnType("int");

                    b.Property<string>("RPL_Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("RPL_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("RPL_PublisherID")
                        .HasColumnType("int");

                    b.Property<int>("RPL_ReceiverID")
                        .HasColumnType("int");

                    b.Property<short>("RPL_Status")
                        .HasColumnType("smallint");

                    b.HasKey("RPL_ID");

                    b.ToTable("T_Relpy");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Report", b =>
                {
                    b.Property<int>("RPT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RPT_Additional")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("RPT_Date")
                        .HasColumnType("datetime");

                    b.Property<short>("RPT_Reason")
                        .HasColumnType("smallint");

                    b.Property<int>("RPT_ReportedID")
                        .HasColumnType("int");

                    b.Property<int>("RPT_ReporterID")
                        .HasColumnType("int");

                    b.Property<short>("RPT_Status")
                        .HasColumnType("smallint");

                    b.Property<short>("RPT_Type")
                        .HasColumnType("smallint");

                    b.HasKey("RPT_ID");

                    b.ToTable("T_Report");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_ReportReason", b =>
                {
                    b.Property<short>("RR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RR_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("RR_ID");

                    b.ToTable("T_ReportReason");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Review", b =>
                {
                    b.Property<int>("RV_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RV_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("RV_MsgToReportedID")
                        .HasColumnType("int");

                    b.Property<int>("RV_MsgToReporterID")
                        .HasColumnType("int");

                    b.Property<bool>("RV_Result")
                        .HasColumnType("bit");

                    b.Property<int>("RV_ReviewedID")
                        .HasColumnType("int");

                    b.Property<int>("RV_ReviewerID")
                        .HasColumnType("int");

                    b.Property<short>("RV_Type")
                        .HasColumnType("smallint");

                    b.HasKey("RV_ID");

                    b.ToTable("T_Review");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_User", b =>
                {
                    b.Property<int>("U_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("U_Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("U_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("U_FollowedNum")
                        .HasColumnType("int");

                    b.Property<int>("U_FollowerNum")
                        .HasColumnType("int");

                    b.Property<string>("U_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("U_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("U_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<short>("U_Status")
                        .HasColumnType("smallint");

                    b.Property<string>("U_Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<short>("U_Type")
                        .HasColumnType("smallint");

                    b.HasKey("U_ID");

                    b.ToTable("T_User");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_Wallpaper", b =>
                {
                    b.Property<int>("W_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("W_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("W_FavoriteNum")
                        .HasColumnType("int");

                    b.Property<int>("W_LikeNum")
                        .HasColumnType("int");

                    b.Property<string>("W_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("W_PublisherID")
                        .HasColumnType("int");

                    b.Property<short>("W_Status")
                        .HasColumnType("smallint");

                    b.Property<string>("W_Story")
                        .IsRequired()
                        .HasColumnType("nvarchar(3072)")
                        .HasMaxLength(3072);

                    b.Property<string>("W_Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("W_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<short>("W_Type")
                        .HasColumnType("smallint");

                    b.HasKey("W_ID");

                    b.ToTable("T_Wallpaper");
                });

            modelBuilder.Entity("PictureWhisper.Domain.Entites.T_WallpaperType", b =>
                {
                    b.Property<short>("WT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WT_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("WT_ID");

                    b.ToTable("T_WallpaperType");
                });
#pragma warning restore 612, 618
        }
    }
}
